<?xml version="1.0" encoding="UTF-8"?>
<project name="Visualgorithm" default="default" basedir=".">
  <property name="platform.version" value="1.6"/>
  <property name="project.name" value="Visualgorithm"/>
  <property name="project.version" value="0.20"/>
  <property name="project.encoding" value="UTF-8"/>
  <property name="main.class" value="main.Visualgorithm"/>
  <property name="src.dir" location="src"/>
  <property name="test.dir" location="test"/>
  <property name="lib.dir" location="lib"/>
  <property name="img.dir" location="img"/>
  <property name="build.dir" location="bin"/>
  <property name="build.src.dir" location="${build.dir}/src"/>
  <property name="build.test.dir" location="${build.dir}/test"/>
  <property name="dist.dir" location="dist"/>
  <property name="dist.javadoc.dir" location="${dist.dir}/javadoc"/>

  <path id="lib.path">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <dirset dir="${build.src.dir}">
      <include name="**"/>
    </dirset>
  </path>


  <target name="-pre-compile-src">
    <mkdir dir="${build.src.dir}"/>
  </target>

  <target name="-pre-compile-test">
    <mkdir dir="${build.test.dir}"/>
  </target>

  <target name="-pre-jar">
    <mkdir dir="${dist.dir}"/>
    <copy todir="${build.src.dir}/img">
      <fileset dir="${img.dir}"/>
    </copy>
  </target>

  <target name="clean" description="Clean build products.">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="compile-src" depends="-pre-compile-src" description="Compile src directory of the project.">
    <javac destdir="${build.src.dir}" encoding="${project.encoding}" fork="yes" includeantruntime="false" includes="**" source="${platform.version}" sourcepath="" srcdir="${src.dir}" target="${platform.version}"/>
  </target>

  <target name="compile-test" depends="compile-src, -pre-compile-test" description="Compile test directory of the project.">
    <javac destdir="${build.test.dir}" encoding="${project.encoding}" fork="yes" includeantruntime="false" includes="**" source="${platform.version}" sourcepath="" srcdir="${test.dir}" target="${platform.version}">
      <classpath>
        <path refid="lib.path"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile-src, -pre-jar" description="Build JAR.">
    <jar jarfile="${dist.dir}/${project.name}-${project.version}.jar" basedir="${build.src.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar" description="Run a main class.">
    <java jar="${dist.dir}/${project.name}-${project.version}.jar" fork="true"/>
  </target>

  <target name="test" depends="compile-test" description="Run unit tests.">
    <junit printsummary="yes" fork="yes">
      <classpath>
        <path refid="lib.path"/>
        <dirset dir="${build.test.dir}">
          <include name="**"/>
        </dirset>
      </classpath>
      <test name="util.ImageLoadingUtilityTest"/>
      <test name="model.tree.BinaryNodeTest"/>
      <test name="model.tree.BinaryTreeTest"/>
      <test name="model.tree.BinaryTreeModelTest"/>
      <test name="model.SoftwareModelTest"/>
      <test name="io.tree.AVLTreeFileTest"/>
      <test name="io.tree.BinarySearchTreeFileTest"/>
      <test name="io.tree.RedBlackTreeFileTest"/>
      <test name="compiler.TokenTest"/>
      <test name="compiler.AlgoCompilerTest"/>
      <test name="controller.BinaryTreeControllerTest"/>
      <test name="controller.SoftwareControllerTest"/>
      <test name="algorithm.tree.AVLTreeDeleteAlgorithmTest"/>
      <test name="algorithm.tree.AVLTreeInsertAlgorithmTest"/>
      <test name="algorithm.tree.AVLTreeLeftRotationAlgorithmTest"/>
      <test name="algorithm.tree.AVLTreeRightRotationAlgorithmTest"/>
      <test name="algorithm.tree.BinarySearchTreeDeleteAlgorithmTest"/>
      <test name="algorithm.tree.BinarySearchTreeInsertAlgorithmTest"/>
      <test name="algorithm.tree.BinarySearchTreeMinimumAlgorithmTest"/>
      <test name="algorithm.tree.BinarySearchTreeSearchAlgorithmTest"/>
      <test name="algorithm.tree.BinarySearchTreeSuccessorAlgorithmTest"/>
      <test name="algorithm.tree.RedBlackTreeDeleteAlgorithmTest"/>
      <test name="algorithm.tree.RedBlackTreeInsertAlgorithmTest"/>
      <test name="algorithm.tree.RedBlackTreeLeftRotationAlgorithmTest"/>
      <test name="algorithm.tree.RedBlackTreeRightRotationAlgorithmTest"/>
    </junit>
  </target>

  <target name="javadoc" description="Build Javadoc.">
    <mkdir dir="${dist.javadoc.dir}"/>
    <javadoc author="true" charset="${project.encoding}" destdir="${dist.javadoc.dir}" docencoding="${project.encoding}" encoding="${project.encoding}" failonerror="true" noindex="false" nonavbar="false" notree="false" private="false" source="${platform.version}" splitindex="true" use="true" useexternalfile="true" version="true" windowtitle="${project.name}">
      <fileset dir="${src.dir}">
        <filename name="**/*.java"/>
      </fileset>
    </javadoc>
  </target>

  <target depends="test, jar, javadoc" description="Build and test whole project." name="default"/>
</project>
